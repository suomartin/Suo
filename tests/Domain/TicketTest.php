<?php

namespace Test\Domain;

use Domain\Ticket,
    Domain\Room;

/**
 * Test class for Ticket.
 * Generated by PHPUnit on 2011-08-23 at 22:06:48.
 */
class TicketTest extends \PHPUnit_Framework_TestCase
{
    /**
     * Room object to use with Ticket
     *
     * @return \Domain\Room
     */
    protected function getRoom()
    {
        $o_room = new Room('1', 'reg');

        return $o_room;
    }

    public function testHasId()
    {
        $o_room = $this->getRoom();

        $o_ticket = new Ticket($o_room);

        $this->assertAttributeEmpty('id', $o_ticket);
    }

    public function testHasCreationTime()
    {
        $o_room = $this->getRoom();

        $o_ticket = new Ticket($o_room);

        $this->assertAttributeEquals(new \DateTime('now'), 'creation_time', $o_ticket);
    }

    public function testHasStartDate()
    {
        $o_room = $this->getRoom();

        $o_ticket = new Ticket($o_room);

        $this->assertAttributeEquals(new \DateTime('now'), 'start_date', $o_ticket);
    }

    public function testHasStartTime()
    {
        $o_room = $this->getRoom();

        $o_ticket = new Ticket($o_room);

        $this->assertAttributeEquals(new \DateTime('now'), 'start_time', $o_ticket);
    }

    public function testHasStartDateSet()
    {
        $o_room = $this->getRoom();

        $s_expected = '2011-01-01';

        $o_ticket = new Ticket($o_room, $s_expected);

        $this->assertAttributeEquals(new \DateTime($s_expected), 'start_date', $o_ticket);
    }

    public function testHasStartTimeSet()
    {
        $o_room = $this->getRoom();

        $s_expected = '10:00:00';

        $o_ticket = new Ticket($o_room, 'now', $s_expected);

        $this->assertAttributeEquals(new \DateTime($s_expected), 'start_time', $o_ticket);
    }

}